strip.text = element_text(size = 50, face = 'bold'),
strip.background = element_rect(fill = "#D1D0D0"),
# Legend
legend.title = element_text(size = 40, face = "bold"),
legend.text = element_text(size = 30, face = "bold", colour = "black"),
legend.position = "bottom",
# Grid and Background
panel.grid.major = element_line(size = 0.3, linetype = 'solid', colour = "black"),
panel.background = element_rect(fill = '#f3f3f3'),
# Axis Lines and Ticks
axis.line = element_line(colour = "black"),
axis.ticks = element_line(color="black"),
# Text
text = element_text(size=20, color="black"))
ggsave("../figures/fragOutputPlot.png", plot = fragOutputPlot, width = 20, height = 15, units = 'in', dpi = 600)
# Wrangling for the table
fragTab1 <- fragMonth %>%
select(Month, Species, `New Genotype`, totalFrag) %>%
distinct() %>%
group_by(Month, Species) %>%
mutate(Genos = n_distinct(`New Genotype`)) %>%
ungroup() %>%
select(Month, Species, totalFrag, Genos) %>%
group_by(Month, Species) %>%
distinct()
# Making the table
fragTab <- fragTab1 %>%
flextable() %>%
set_header_labels(Data.set = "Data set") %>%
flextable::compose(part = "header", j = "totalFrag", value = as_paragraph("Number of Microfragments\nPropagated")) %>%
flextable::compose(part = "header", j = "Genos", value = as_paragraph("Number of Genotypes\nPropagated")) %>%
autofit() %>%
flextable::font(fontname = "Times New Roman", part = "all") %>%
fontsize(size = 12, part = "all") %>%
bold(part = "header") %>%
align(align = "center", j = "totalFrag") %>%
align(align = 'center', j = "Genos") %>%
set_table_properties(width = 0.8, align = "center", layout = "autofit") %>%
add_footer_row(values = list(Month = "Totals:", "", totalFrag = sum(fragTab1$totalFrag), Genos = sum(fragTab1$Genos)), colwidths = c(1, 1, 1, 1)) %>%
align(align = 'center', part = "footer")
totals <- c("Totals:", "", sum(fragTab1$totalFrag), sum(fragTab1$Genos))
fragDoc = read_docx()
fragDoc = body_add_flextable(fragDoc, value = fragTab)
print(fragDoc, target = "../tables/fragOutputTable.docx")
fragTab
outplantAPAL <- apalData %>%
select(Year,
Date,
`Site ID`,
Deliverable,
`# plugs`,
`1-month Monitoring?`,
`1-month Survival`,
`1-month % Dead`,
`1-month % Missing`,
`1-month % Plot Survival`,
`% of Plots with Partial Mortality`,
`Avg. % Partial Mortality within Affected Plots`,
`12-month Monitoring?`,
`12-month Survival`,
`12-month % Dead`,
`12-month % Missing`,
`12-month % Plot Survival`) %>%
filter(Deliverable %in% c("NFWF-EDR Yr3", "NFWF-EDR", "NFWF-EDR Yr2")) %>%
mutate_at(c("Year",
"Site ID",
"Deliverable"), as.factor) %>%
droplevels() %>%
mutate(cum_sum = cumsum(`# plugs`)) %>%
mutate(Date = as.Date(Date, "%m %d %Y"))
outplantByYearAP <- outplantAPAL %>%
select(Year,
Date,
`Site ID`,
Deliverable,
`# plugs`) %>%
group_by(Deliverable) %>%
mutate(totalOutplanted = sum(`# plugs`))
apalDeliverables <- c(5000, 8000, 11000)
apalCumulativeDeliverables <- c(5000, 13000, 24000)
outplantAPALplot1<- ggplot(outplantAPAL, aes(x = Date, y = cum_sum))+
geom_line(aes(color = "Fragments Outplanted", linetype = 'solid'), linewidth = 3)+
geom_hline(aes(yintercept = apalCumulativeDeliverables[1], linetype = 'Year 1 Outplant Goal (In-situ Apal)', color = 'Year 1 Outplant Goal (In-situ Apal)'), linewidth = 3) +
geom_hline(aes(yintercept = apalCumulativeDeliverables[2], linetype = 'Year 2 Outplant Goal (In-situ Apal)', color = 'Year 2 Outplant Goal (In-situ Apal)'), linewidth = 3) +
geom_hline(aes(yintercept = apalCumulativeDeliverables[3], linetype = 'Year 3 Outplant Goal (In-situ Apal', color = 'Year 3 Outplant Goal (In-situ Apal)'), linewidth = 3) +
geom_segment(aes(x = as.Date("2023-05-09"), y = 19363,
xend = as.Date("2024-02-01"), yend = 19363),
linetype = 'solid', color = 'blue', size = 3)+ # remove this with full dataset
scale_y_continuous(limits = c(0, 30000), breaks = seq(0, 30000, by = 2000))+
ggtitle(expression("Number of "*italic("Acropora palmata")*" Fragments Outplanted per Year"))+
xlab(" ")+
ylab("Number of fragments outplanted")+
scale_color_manual(values = c('blue', 'grey', "green3", 'gold'), name = " ") +
scale_linetype_manual(name = " ", values = c('solid', 'dashed', 'dashed', 'dashed'), guide = "none")+
scale_x_date(date_labels = "%b-%Y", date_breaks = "1 month")
outplantAPALplot <- outplantAPALplot1 + theme(
# Title
plot.title = element_text(size = 40, face = "bold"),
# X Axis
axis.text.x = element_text(angle = 45, hjust = 1),
axis.title.x = element_text(size = 20, face = "bold"),
# Y Axis
axis.title.y = element_text(size = 20, face = "bold"),
axis.text.y = element_text(colour = "black", size = 20, face = "bold"),
# Axis Lines and Ticks
axis.line = element_line(colour = "black"),
axis.ticks = element_line(color="black"),
# Legend
legend.title = element_text(size = 20, face = "bold"),
legend.text = element_text(size = 20, face = "bold", colour = "black"),
legend.position = "bottom",
# Grid and Background
panel.grid.major = element_line(size = 0.3, linetype = 'solid', colour = "black"),
panel.background = element_rect(fill = 'white'),
# Text
text = element_text(size=20, color="black"))
ggsave("../figures/cumulativeAPALoutplantPlot.png", plot =outplantAPALplot, width = 20, height = 15, units = 'in', dpi = 600)
# Wrangling for the table
outplantAPALtab1 <- apalData %>%
select(Date, `Site ID`, `# plugs`, Lat, Long, ...28:ncol(.), Deliverable) %>%
mutate(numberOfGenotypes = rowSums(!is.na(select(., ...28:ncol(.))))) %>%  # this counts all of the "geno types used" section in this and adds them to a column that is "number of Genotypes"
mutate(Date = as.Date(Date)) %>%
filter(Deliverable %in% c("NFWF-EDR Yr3", "NFWF-EDR", "NFWF-EDR Yr2")) %>%
select(Date, `Site ID`, `# plugs`, Lat, Long, numberOfGenotypes)
knitr::opts_chunk$set(warning = FALSE, fig.align = 'left')
knitr::opts_knit$set(root.dir = "../data")
options(width = 88)
library(magrittr)
if (!require("pacman")) install.packages("pacman")
pacman::p_load("ggplot2", "googlesheets4", "dplyr", "officer","reshape2", "stringr", "flextable", "gridExtra", "ggpubr", "Rmisc", "rcompanion", "RColorBrewer", "googledrive", "gdata", "readxl", "DescTools","patchwork", "FSA", "rstatix", "tidyverse", "lme4", 'PMCRMplus', "EnvStats", "emmeans", "MuMIn", "sjstats", "lmerTest", "gargle", "FSA", "vegan", "gtools", "lubridate", "data.table", "forcats")
data <- drive_download(
as_id("1b4IWK7tfSt3n8o8NlgJKSDoqj_QkHvKcaJBNz85RBv4"),
path = "../data/outplantData.xlsx",
overwrite = TRUE)
# The start and end dates for this reporting period
reportingStart <- as.Date("2023-07-01")
reportingEnd <- as.Date("2023-12-31")
# APAL Data
apalData <- read_excel("../data/outplantData.xlsx", sheet = "ex-situ Apal outplants")
# ACER Data
acerData <- read_excel("../data/outplantdata.xlsx", sheet = "in-situ Acer outplants", na = c("", "N/A", "NA"))
data <- drive_download(
as_id("1u13FQRQ6u2vc4bRK6ZlrIGdhLjLvT_L2nAx7zcglWA0"),
path = "../data/fraggingData.xlsx",
overwrite = TRUE)
# Frag Data 2023
frag23 <- read_excel("../data/fraggingData.xlsx", sheet = "Fragging 2023", na = "")
stateFrag1 <- rbind(frag23, frag24)
stateFrag1$`Reporting Period` <- ifelse(is.na(stateFrag1$`Reporting Period`), "To Be Assigned", stateFrag1$`Reporting Period`)
stateFrag <- stateFrag1 %>%
select(`Reporting Period`,
`Date Cut`,
Species,
`New Genotype`,
`New Frag Count`) %>%
filter(`Date Cut` >= "2023-07-01" & `Date Cut` <= "2023-12-31") %>%
filter(`Reporting Period` %in% c("State Yr7", "To Be Assigned")) %>%
mutate_at(c("Reporting Period",
"Date Cut",
"Species",
"New Genotype"), as.factor) %>%
mutate_at(c("Date Cut"), as.Date) %>%
na.omit()
# mutate(MonthYear = format(`Date Cut`, "%b %Y")) %>%
# group_by(MonthYear) %>%
# mutate(MonthCount = sum(`New Frag Count`))
fragMonth <- stateFrag %>%
mutate(Month = format(`Date Cut`, "%Y-%m")) %>%
mutate(Month = as.factor(Month)) %>%
group_by(Month, Species) %>%
mutate(totalFrag = sum(`New Frag Count`))
reportingPeriod <- as.factor(c("2023-07", "2023-08", "2023-09", "2023-10", "2023-11", "2023-12"))
# Create a summary dataframe with all combinations of "Month" and "Species"
3
fragOutputPlot1 <- ggplot(mergeFrag, aes(x = Month, y = totalFrag, fill = Species)) +
geom_bar(stat = "identity")+
ggtitle("Fragments Produced")+
xlab("")+
ylab("Number of Fragments Produced")+
scale_y_continuous(limits = c(0, 3000), breaks = seq(0, 3000, by = 500))
fragOutputPlot <- fragOutputPlot1 + theme(
# Title
plot.title = element_text(size = 40, face = "bold"),
# X Axis
axis.text.x = element_text(size = 40, angle = 45, hjust = 1),
axis.title.x = element_text(size = 20, face = "bold"),
# Y Axis
axis.title.y = element_text(size = 40, face = "bold"),
axis.text.y = element_text(colour = "black", size = 30, face = "bold"),
# Facets <- this will be removed if you don't have facets!
strip.text = element_text(size = 50, face = 'bold'),
strip.background = element_rect(fill = "#D1D0D0"),
# Legend
legend.title = element_text(size = 40, face = "bold"),
legend.text = element_text(size = 30, face = "bold", colour = "black"),
legend.position = "bottom",
# Grid and Background
panel.grid.major = element_line(size = 0.3, linetype = 'solid', colour = "black"),
panel.background = element_rect(fill = '#f3f3f3'),
# Axis Lines and Ticks
axis.line = element_line(colour = "black"),
axis.ticks = element_line(color="black"),
# Text
text = element_text(size=20, color="black"))
ggsave("../figures/fragOutputPlot.png", plot = fragOutputPlot, width = 20, height = 15, units = 'in', dpi = 600)
# Wrangling for the table
fragTab1 <- fragMonth %>%
select(Month, Species, `New Genotype`, totalFrag) %>%
distinct() %>%
group_by(Month, Species) %>%
mutate(Genos = n_distinct(`New Genotype`)) %>%
ungroup() %>%
select(Month, Species, totalFrag, Genos) %>%
group_by(Month, Species) %>%
distinct()
# Making the table
fragTab <- fragTab1 %>%
flextable() %>%
set_header_labels(Data.set = "Data set") %>%
flextable::compose(part = "header", j = "totalFrag", value = as_paragraph("Number of Microfragments\nPropagated")) %>%
flextable::compose(part = "header", j = "Genos", value = as_paragraph("Number of Genotypes\nPropagated")) %>%
autofit() %>%
flextable::font(fontname = "Times New Roman", part = "all") %>%
fontsize(size = 12, part = "all") %>%
bold(part = "header") %>%
align(align = "center", j = "totalFrag") %>%
align(align = 'center', j = "Genos") %>%
set_table_properties(width = 0.8, align = "center", layout = "autofit") %>%
add_footer_row(values = list(Month = "Totals:", "", totalFrag = sum(fragTab1$totalFrag), Genos = sum(fragTab1$Genos)), colwidths = c(1, 1, 1, 1)) %>%
align(align = 'center', part = "footer")
totals <- c("Totals:", "", sum(fragTab1$totalFrag), sum(fragTab1$Genos))
fragDoc = read_docx()
fragDoc = body_add_flextable(fragDoc, value = fragTab)
print(fragDoc, target = "../tables/fragOutputTable.docx")
fragTab
outplantAPAL <- apalData %>%
select(Year,
Date,
`Site ID`,
Deliverable,
`# plugs`,
`1-month Monitoring?`,
`1-month Survival`,
`1-month % Dead`,
`1-month % Missing`,
`1-month % Plot Survival`,
`% of Plots with Partial Mortality`,
`Avg. % Partial Mortality within Affected Plots`,
`12-month Monitoring?`,
`12-month Survival`,
`12-month % Dead`,
`12-month % Missing`,
`12-month % Plot Survival`) %>%
filter(Deliverable %in% c("NFWF-EDR Yr3", "NFWF-EDR", "NFWF-EDR Yr2")) %>%
mutate_at(c("Year",
"Site ID",
"Deliverable"), as.factor) %>%
droplevels() %>%
mutate(cum_sum = cumsum(`# plugs`)) %>%
mutate(Date = as.Date(Date, "%m %d %Y"))
outplantByYearAP <- outplantAPAL %>%
select(Year,
Date,
`Site ID`,
Deliverable,
`# plugs`) %>%
group_by(Deliverable) %>%
mutate(totalOutplanted = sum(`# plugs`))
apalDeliverables <- c(5000, 8000, 11000)
apalCumulativeDeliverables <- c(5000, 13000, 24000)
outplantAPALplot1<- ggplot(outplantAPAL, aes(x = Date, y = cum_sum))+
geom_line(aes(color = "Fragments Outplanted", linetype = 'solid'), linewidth = 3)+
geom_hline(aes(yintercept = apalCumulativeDeliverables[1], linetype = 'Year 1 Outplant Goal (In-situ Apal)', color = 'Year 1 Outplant Goal (In-situ Apal)'), linewidth = 3) +
geom_hline(aes(yintercept = apalCumulativeDeliverables[2], linetype = 'Year 2 Outplant Goal (In-situ Apal)', color = 'Year 2 Outplant Goal (In-situ Apal)'), linewidth = 3) +
geom_hline(aes(yintercept = apalCumulativeDeliverables[3], linetype = 'Year 3 Outplant Goal (In-situ Apal', color = 'Year 3 Outplant Goal (In-situ Apal)'), linewidth = 3) +
geom_segment(aes(x = as.Date("2023-05-09"), y = 19363,
xend = as.Date("2024-02-01"), yend = 19363),
linetype = 'solid', color = 'blue', size = 3)+ # remove this with full dataset
scale_y_continuous(limits = c(0, 30000), breaks = seq(0, 30000, by = 2000))+
ggtitle(expression("Number of "*italic("Acropora palmata")*" Fragments Outplanted per Year"))+
xlab(" ")+
ylab("Number of fragments outplanted")+
scale_color_manual(values = c('blue', 'grey', "green3", 'gold'), name = " ") +
scale_linetype_manual(name = " ", values = c('solid', 'dashed', 'dashed', 'dashed'), guide = "none")+
scale_x_date(date_labels = "%b-%Y", date_breaks = "1 month")
outplantAPALplot <- outplantAPALplot1 + theme(
# Title
plot.title = element_text(size = 40, face = "bold"),
# X Axis
axis.text.x = element_text(angle = 45, hjust = 1),
axis.title.x = element_text(size = 20, face = "bold"),
# Y Axis
axis.title.y = element_text(size = 20, face = "bold"),
axis.text.y = element_text(colour = "black", size = 20, face = "bold"),
# Axis Lines and Ticks
axis.line = element_line(colour = "black"),
axis.ticks = element_line(color="black"),
# Legend
legend.title = element_text(size = 20, face = "bold"),
legend.text = element_text(size = 20, face = "bold", colour = "black"),
legend.position = "bottom",
# Grid and Background
panel.grid.major = element_line(size = 0.3, linetype = 'solid', colour = "black"),
panel.background = element_rect(fill = 'white'),
# Text
text = element_text(size=20, color="black"))
ggsave("../figures/cumulativeAPALoutplantPlot.png", plot =outplantAPALplot, width = 20, height = 15, units = 'in', dpi = 600)
# Wrangling for the table
outplantAPALtab1 <- apalData %>%
select(Date, `Site ID`, `# plugs`, Lat, Long, ...28:ncol(.), Deliverable) %>%
mutate(numberOfGenotypes = rowSums(!is.na(select(., ...28:ncol(.))))) %>%  # this counts all of the "geno types used" section in this and adds them to a column that is "number of Genotypes"
mutate(Date = as.Date(Date)) %>%
filter(Deliverable %in% c("NFWF-EDR Yr3", "NFWF-EDR", "NFWF-EDR Yr2")) %>%
select(Date, `Site ID`, `# plugs`, Lat, Long, numberOfGenotypes)
twelveMonthAPALtab1 <- outplantAPAL %>%
select(`Site ID`, `12-month Monitoring?`, `# plugs`, `12-month Survival`, `12-month % Dead`, `12-month % Missing`, `12-month % Plot Survival`, Deliverable) %>%
mutate(`12-month Monitoring?` = as.Date(`12-month Monitoring?`, `12-month % Plot Survival` = as.numeric(`12-month % Plot Survival`))) %>%
# filter(!`Site ID` %in% c("T_AP_23", "T_AP_24", "T_AP_25", "T_AP_25")) %>%
filter(Deliverable %in% c("NFWF-EDR Yr3", "NFWF-EDR", "NFWF-EDR Yr2")) %>%
select(`Site ID`, `12-month Monitoring?`, `# plugs`, `12-month Survival`, `12-month % Dead`, `12-month % Missing`, `12-month % Plot Survival`) %>%
mutate_at(vars(`12-month Survival`, `12-month % Dead`, `12-month % Missing`, `12-month % Plot Survival`), ~ round(. * 100, 2)) %>%
na.omit()
knitr::opts_chunk$set(warning = FALSE, fig.align = 'left')
knitr::opts_knit$set(root.dir = "../data")
options(width = 88)
library(magrittr)
if (!require("pacman")) install.packages("pacman")
pacman::p_load("ggplot2", "googlesheets4", "dplyr", "officer","reshape2", "stringr", "flextable", "gridExtra", "ggpubr", "Rmisc", "rcompanion", "RColorBrewer", "googledrive", "gdata", "readxl", "DescTools","patchwork", "FSA", "rstatix", "tidyverse", "lme4", 'PMCRMplus', "EnvStats", "emmeans", "MuMIn", "sjstats", "lmerTest", "gargle", "FSA", "vegan", "gtools", "lubridate", "data.table", "forcats")
data <- drive_download(
as_id("1b4IWK7tfSt3n8o8NlgJKSDoqj_QkHvKcaJBNz85RBv4"),
path = "../data/outplantData.xlsx",
overwrite = TRUE)
# The start and end dates for this reporting period
reportingStart <- as.Date("2023-07-01")
reportingEnd <- as.Date("2023-12-31")
# APAL Data
apalData <- read_excel("../data/outplantData.xlsx", sheet = "ex-situ Apal outplants")
# ACER Data
acerData <- read_excel("../data/outplantdata.xlsx", sheet = "in-situ Acer outplants", na = c("", "N/A", "NA"))
data <- drive_download(
as_id("1u13FQRQ6u2vc4bRK6ZlrIGdhLjLvT_L2nAx7zcglWA0"),
path = "../data/fraggingData.xlsx",
overwrite = TRUE)
# Frag Data 2023
frag23 <- read_excel("../data/fraggingData.xlsx", sheet = "Fragging 2023", na = "")
stateFrag1 <- rbind(frag23, frag24)
stateFrag1$`Reporting Period` <- ifelse(is.na(stateFrag1$`Reporting Period`), "To Be Assigned", stateFrag1$`Reporting Period`)
stateFrag <- stateFrag1 %>%
select(`Reporting Period`,
`Date Cut`,
Species,
`New Genotype`,
`New Frag Count`) %>%
filter(`Date Cut` >= "2023-07-01" & `Date Cut` <= "2023-12-31") %>%
filter(`Reporting Period` %in% c("State Yr7", "To Be Assigned")) %>%
mutate_at(c("Reporting Period",
"Date Cut",
"Species",
"New Genotype"), as.factor) %>%
mutate_at(c("Date Cut"), as.Date) %>%
na.omit()
# mutate(MonthYear = format(`Date Cut`, "%b %Y")) %>%
# group_by(MonthYear) %>%
# mutate(MonthCount = sum(`New Frag Count`))
fragMonth <- stateFrag %>%
mutate(Month = format(`Date Cut`, "%Y-%m")) %>%
mutate(Month = as.factor(Month)) %>%
group_by(Month, Species) %>%
mutate(totalFrag = sum(`New Frag Count`))
reportingPeriod <- as.factor(c("2023-07", "2023-08", "2023-09", "2023-10", "2023-11", "2023-12"))
# Create a summary dataframe with all combinations of "Month" and "Species"
3
fragOutputPlot1 <- ggplot(mergeFrag, aes(x = Month, y = totalFrag, fill = Species)) +
geom_bar(stat = "identity")+
ggtitle("Fragments Produced")+
xlab("")+
ylab("Number of Fragments Produced")+
scale_y_continuous(limits = c(0, 3000), breaks = seq(0, 3000, by = 500))
fragOutputPlot <- fragOutputPlot1 + theme(
# Title
plot.title = element_text(size = 40, face = "bold"),
# X Axis
axis.text.x = element_text(size = 40, angle = 45, hjust = 1),
axis.title.x = element_text(size = 20, face = "bold"),
# Y Axis
axis.title.y = element_text(size = 40, face = "bold"),
axis.text.y = element_text(colour = "black", size = 30, face = "bold"),
# Facets <- this will be removed if you don't have facets!
strip.text = element_text(size = 50, face = 'bold'),
strip.background = element_rect(fill = "#D1D0D0"),
# Legend
legend.title = element_text(size = 40, face = "bold"),
legend.text = element_text(size = 30, face = "bold", colour = "black"),
legend.position = "bottom",
# Grid and Background
panel.grid.major = element_line(size = 0.3, linetype = 'solid', colour = "black"),
panel.background = element_rect(fill = '#f3f3f3'),
# Axis Lines and Ticks
axis.line = element_line(colour = "black"),
axis.ticks = element_line(color="black"),
# Text
text = element_text(size=20, color="black"))
ggsave("../figures/fragOutputPlot.png", plot = fragOutputPlot, width = 20, height = 15, units = 'in', dpi = 600)
# Wrangling for the table
fragTab1 <- fragMonth %>%
select(Month, Species, `New Genotype`, totalFrag) %>%
distinct() %>%
group_by(Month, Species) %>%
mutate(Genos = n_distinct(`New Genotype`)) %>%
ungroup() %>%
select(Month, Species, totalFrag, Genos) %>%
group_by(Month, Species) %>%
distinct()
# Making the table
fragTab <- fragTab1 %>%
flextable() %>%
set_header_labels(Data.set = "Data set") %>%
flextable::compose(part = "header", j = "totalFrag", value = as_paragraph("Number of Microfragments\nPropagated")) %>%
flextable::compose(part = "header", j = "Genos", value = as_paragraph("Number of Genotypes\nPropagated")) %>%
autofit() %>%
flextable::font(fontname = "Times New Roman", part = "all") %>%
fontsize(size = 12, part = "all") %>%
bold(part = "header") %>%
align(align = "center", j = "totalFrag") %>%
align(align = 'center', j = "Genos") %>%
set_table_properties(width = 0.8, align = "center", layout = "autofit") %>%
add_footer_row(values = list(Month = "Totals:", "", totalFrag = sum(fragTab1$totalFrag), Genos = sum(fragTab1$Genos)), colwidths = c(1, 1, 1, 1)) %>%
align(align = 'center', part = "footer")
totals <- c("Totals:", "", sum(fragTab1$totalFrag), sum(fragTab1$Genos))
fragDoc = read_docx()
fragDoc = body_add_flextable(fragDoc, value = fragTab)
print(fragDoc, target = "../tables/fragOutputTable.docx")
fragTab
outplantAPAL <- apalData %>%
select(Year,
Date,
`Site ID`,
Deliverable,
`# plugs`,
`1-month Monitoring?`,
`1-month Survival`,
`1-month % Dead`,
`1-month % Missing`,
`1-month % Plot Survival`,
`% of Plots with Partial Mortality`,
`Avg. % Partial Mortality within Affected Plots`,
`12-month Monitoring?`,
`12-month Survival`,
`12-month % Dead`,
`12-month % Missing`,
`12-month % Plot Survival`) %>%
filter(Deliverable %in% c("NFWF-EDR Yr3", "NFWF-EDR", "NFWF-EDR Yr2")) %>%
mutate_at(c("Year",
"Site ID",
"Deliverable"), as.factor) %>%
droplevels() %>%
mutate(cum_sum = cumsum(`# plugs`)) %>%
mutate(Date = as.Date(Date, "%m %d %Y"))
outplantByYearAP <- outplantAPAL %>%
select(Year,
Date,
`Site ID`,
Deliverable,
`# plugs`) %>%
group_by(Deliverable) %>%
mutate(totalOutplanted = sum(`# plugs`))
apalDeliverables <- c(5000, 8000, 11000)
apalCumulativeDeliverables <- c(5000, 13000, 24000)
outplantAPALplot1<- ggplot(outplantAPAL, aes(x = Date, y = cum_sum))+
geom_line(aes(color = "Fragments Outplanted", linetype = 'solid'), linewidth = 3)+
geom_hline(aes(yintercept = apalCumulativeDeliverables[1], linetype = 'Year 1 Outplant Goal (In-situ Apal)', color = 'Year 1 Outplant Goal (In-situ Apal)'), linewidth = 3) +
geom_hline(aes(yintercept = apalCumulativeDeliverables[2], linetype = 'Year 2 Outplant Goal (In-situ Apal)', color = 'Year 2 Outplant Goal (In-situ Apal)'), linewidth = 3) +
geom_hline(aes(yintercept = apalCumulativeDeliverables[3], linetype = 'Year 3 Outplant Goal (In-situ Apal', color = 'Year 3 Outplant Goal (In-situ Apal)'), linewidth = 3) +
geom_segment(aes(x = as.Date("2023-05-09"), y = 19363,
xend = as.Date("2024-02-01"), yend = 19363),
linetype = 'solid', color = 'blue', size = 3)+ # remove this with full dataset
scale_y_continuous(limits = c(0, 30000), breaks = seq(0, 30000, by = 2000))+
ggtitle(expression("Number of "*italic("Acropora palmata")*" Fragments Outplanted per Year"))+
xlab(" ")+
ylab("Number of fragments outplanted")+
scale_color_manual(values = c('blue', 'grey', "green3", 'gold'), name = " ") +
scale_linetype_manual(name = " ", values = c('solid', 'dashed', 'dashed', 'dashed'), guide = "none")+
scale_x_date(date_labels = "%b-%Y", date_breaks = "1 month")
outplantAPALplot <- outplantAPALplot1 + theme(
# Title
plot.title = element_text(size = 40, face = "bold"),
# X Axis
axis.text.x = element_text(angle = 45, hjust = 1),
axis.title.x = element_text(size = 20, face = "bold"),
# Y Axis
axis.title.y = element_text(size = 20, face = "bold"),
axis.text.y = element_text(colour = "black", size = 20, face = "bold"),
# Axis Lines and Ticks
axis.line = element_line(colour = "black"),
axis.ticks = element_line(color="black"),
# Legend
legend.title = element_text(size = 20, face = "bold"),
legend.text = element_text(size = 20, face = "bold", colour = "black"),
legend.position = "bottom",
# Grid and Background
panel.grid.major = element_line(size = 0.3, linetype = 'solid', colour = "black"),
panel.background = element_rect(fill = 'white'),
# Text
text = element_text(size=20, color="black"))
ggsave("../figures/cumulativeAPALoutplantPlot.png", plot =outplantAPALplot, width = 20, height = 15, units = 'in', dpi = 600)
# Wrangling for the table
outplantAPALtab1 <- apalData %>%
select(Date, `Site ID`, `# plugs`, Lat, Long, ...28:ncol(.), Deliverable) %>%
mutate(numberOfGenotypes = rowSums(!is.na(select(., ...28:ncol(.))))) %>%  # this counts all of the "geno types used" section in this and adds them to a column that is "number of Genotypes"
mutate(Date = as.Date(Date)) %>%
filter(Deliverable %in% c("NFWF-EDR Yr3", "NFWF-EDR", "NFWF-EDR Yr2")) %>%
select(Date, `Site ID`, `# plugs`, Lat, Long, numberOfGenotypes)
