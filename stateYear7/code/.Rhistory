view(bleachCombo)
msvsBleach <- msvsBleach1 %>%
select(Deliverable,
Location,
`Site ID`,
`# plugs`,
`1-month % Survival`,
`12-month % Survival`,
`Frags dead`,
`Frags missing`,
`2023 rapid post-bleaching monitoring % survival`) %>%
mutate(across(where(is.character), as.factor)) %>%
filter(str_detect(Deliverable, "State")) %>%
dplyr::rename(`# frags` = `# plugs`,
`2024 post-bleaching % survival` = `2023 rapid post-bleaching monitoring % survival`) %>%
mutate(species = "msvs")
acerBleach <- acerBleach1 %>%
select(Deliverable,
Location,
`Site ID`,
`# frags`,
`1-month % Survival`,
`12-month % Survival`,
`2024 post-bleaching # dead`,
`2024 post-bleaching # missing`,
`2024 post-bleaching % survival`) %>%
mutate(across(where(is.character), as.factor)) %>%
filter(str_detect(Deliverable, "State")) %>%
dplyr::rename(`Frags dead` = `2024 post-bleaching # dead`,
`Frags missing` = `2024 post-bleaching # missing`) %>%
mutate(species = "acer")
apalBleach <- apalBleach1 %>%
select(Deliverable,
Location,
`Site ID`,
`# frags`,
`1-month % Survival`,
`12-month % Survival`,
`# missing...25`,
`# dead...24`,
`2024 post-bleaching % survival`) %>%
mutate(across(where(is.character), as.factor)) %>%
filter(str_detect(Deliverable, "State")) %>%
dplyr::rename(`Frags dead` = `# missing...25`,
`Frags missing` = `# dead...24`) %>%
mutate(species = 'apal')
bleachCombo1 <- rbind(msvsBleach, acerBleach,apalBleach)
bleachCombo <- bleachCombo1 %>%
filter(!`Site ID` %in% c("ES_AP_1")) %>%
mutate(
`12-month % Survival` = as.numeric(`12-month % Survival`),
aliveBefore = if_else(is.na(`12-month % Survival`) | is.na(`# frags`), 0, `12-month % Survival` * `# frags`),
aliveNow = if_else(is.na(`2024 post-bleaching % survival`) | aliveBefore == 0, 0, `2024 post-bleaching % survival` * `# frags`),
propSurvival = aliveNow/aliveBefore,
propDeadAndMissing = 1-propSurvival)
bleachPlot <- bleachCombo %>%
pivot_longer(cols = c("propSurvival", "propDeadAndMissing"), names_to = "monitoringCategory", values_to = "proportion") %>%
mutate_at(c("monitoringCategory"), as.factor) %>%
mutate(`Site ID` = factor(`Site ID`, levels = mixedsort(levels(`Site ID`)))) %>%
select(Deliverable,
Location,
`Site ID`,
monitoringCategory,
proportion)
bleachPlot <- bleachCombo %>%
pivot_longer(cols = c("propSurvival", "propDeadAndMissing"), names_to = "monitoringCategory", values_to = "proportion") %>%
mutate_at(c("monitoringCategory"), as.factor) %>%
mutate(`Site ID` = factor(`Site ID`, levels = mixedsort(levels(`Site ID`)))) %>%
select(Deliverable,
species,
Location,
`Site ID`,
monitoringCategory,
proportion)
view(bleachPlot)
myColors1 <- c("green3", "red3")
bleachSurvivalPlot2<- ggplot(bleachCombo, aes(x = `Site ID`, y = proportion, fill = monitoringCategory, color = I('black')))+
geom_bar(position = "stack", stat = 'identity', width = 1)+
ggtitle(expression("Post-Bleaching Event Proportional Survival"))+
xlab("Site")+
ylab("Proportional Survival")+
scale_fill_manual(values = myColors1, labels = c("Alive", "Dead or Missing")) +
facet_wrap(species ~ Deliverable, scales = "free_x")
bleachSurvivalPlot2
bleachSurvivalPlot2<- ggplot(bleachPlot, aes(x = `Site ID`, y = proportion, fill = monitoringCategory, color = I('black')))+
geom_bar(position = "stack", stat = 'identity', width = 1)+
ggtitle(expression("Post-Bleaching Event Proportional Survival"))+
xlab("Site")+
ylab("Proportional Survival")+
scale_fill_manual(values = myColors1, labels = c("Alive", "Dead or Missing")) +
facet_wrap(species ~ Deliverable, scales = "free_x")
bleachSurvivalPlot3 <- bleachSurvivalPlot2 + theme(
# Title
plot.title = element_text(size = 40, face = "bold"),
# X Axis
axis.text.x = element_text(size = 20, angle = 45, hjust = 1),
axis.title.x = element_text(size = 40, face = "bold"),
# Y Axis
axis.title.y = element_text(size = 40, face = "bold"),
axis.text.y = element_text(colour = "black", size = 30, face = "bold"),
# Axis Lines and Ticks
axis.line = element_line(colour = "black"),
axis.ticks = element_line(color="black"),
# Legend
legend.title = element_blank(),
legend.text = element_text(size = 30, face = "bold", colour = "black"),
legend.position = "bottom",
# Grid and Background
panel.grid.major = element_line(size = 0.3, linetype = 'solid', colour = "black"),
panel.background = element_rect(fill = 'white'),
# Text
text = element_text(size=20, color="black"),
# Text above facets
strip.text = element_text(size = 20))
bleachSurvivalPlot3
view(bleachCombo)
bleachCombo <- bleachCombo1 %>%
filter(!`Site ID` %in% c("ES_AP_1")) %>%
mutate(
`12-month % Survival` = as.numeric(`12-month % Survival`),
aliveBefore = if_else(is.na(`12-month % Survival`) | is.na(`# frags`), 0, `12-month % Survival` * `# frags`),
aliveNow = if_else(is.na(`2024 post-bleaching % survival`) | aliveBefore == 0, 0, `2024 post-bleaching % survival` * `# frags`),
propSurvival = replace_na(aliveNow / aliveBefore, 0),
propDeadAndMissing = 1 - propSurvival
)
bleachPlot <- bleachCombo %>%
pivot_longer(cols = c("propSurvival", "propDeadAndMissing"), names_to = "monitoringCategory", values_to = "proportion") %>%
mutate_at(c("monitoringCategory"), as.factor) %>%
mutate(`Site ID` = factor(`Site ID`, levels = mixedsort(levels(`Site ID`)))) %>%
select(Deliverable,
species,
Location,
`Site ID`,
monitoringCategory,
proportion)
myColors1 <- c("green3", "red3")
bleachSurvivalPlot2<- ggplot(bleachPlot, aes(x = `Site ID`, y = proportion, fill = monitoringCategory, color = I('black')))+
geom_bar(position = "stack", stat = 'identity', width = 1)+
ggtitle(expression("Post-Bleaching Event Proportional Survival"))+
xlab("Site")+
ylab("Proportional Survival")+
scale_fill_manual(values = myColors1, labels = c("Alive", "Dead or Missing")) +
facet_wrap(species ~ Deliverable, scales = "free_x")
bleachSurvivalPlot3 <- bleachSurvivalPlot2 + theme(
# Title
plot.title = element_text(size = 40, face = "bold"),
# X Axis
axis.text.x = element_text(size = 20, angle = 45, hjust = 1),
axis.title.x = element_text(size = 40, face = "bold"),
# Y Axis
axis.title.y = element_text(size = 40, face = "bold"),
axis.text.y = element_text(colour = "black", size = 30, face = "bold"),
# Axis Lines and Ticks
axis.line = element_line(colour = "black"),
axis.ticks = element_line(color="black"),
# Legend
legend.title = element_blank(),
legend.text = element_text(size = 30, face = "bold", colour = "black"),
legend.position = "bottom",
# Grid and Background
panel.grid.major = element_line(size = 0.3, linetype = 'solid', colour = "black"),
panel.background = element_rect(fill = 'white'),
# Text
text = element_text(size=20, color="black"),
# Text above facets
strip.text = element_text(size = 20))
bleachSurvivalPlot3
levels(bleachPlot$monitoringCategory)
myColors1 <- c("red3", "green3")
bleachSurvivalPlot2<- ggplot(bleachPlot, aes(x = `Site ID`, y = proportion, fill = monitoringCategory, color = I('black')))+
geom_bar(position = "stack", stat = 'identity', width = 1)+
ggtitle(expression("Post-Bleaching Event Proportional Survival"))+
xlab("Site")+
ylab("Proportional Survival")+
scale_fill_manual(values = myColors1, labels = c("Alive", "Dead or Missing")) +
facet_wrap(species ~ Deliverable, scales = "free_x")
bleachSurvivalPlot2
bleachSurvivalPlot2<- ggplot(bleachPlot, aes(x = `Site ID`, y = proportion, fill = monitoringCategory, color = I('black')))+
geom_bar(position = "stack", stat = 'identity', width = 1)+
ggtitle(expression("Post-Bleaching Event Proportional Survival"))+
xlab("Site")+
ylab("Proportional Survival")+
scale_fill_manual(values = myColors1, labels = c("Dead or Missing", "Alive")) +
facet_wrap(species ~ Deliverable, scales = "free_x")
bleachSurvivalPlot2
bleachCombo$Deliverable
levels(bleachCombo$Deliverable)
bleachCombo <- bleachCombo1 %>%
filter(!`Site ID` %in% c("ES_AP_1")) %>%
mutate(
`12-month % Survival` = as.numeric(`12-month % Survival`),
aliveBefore = if_else(is.na(`12-month % Survival`) | is.na(`# frags`), 0, `12-month % Survival` * `# frags`),
aliveNow = if_else(is.na(`2024 post-bleaching % survival`) | aliveBefore == 0, 0, `2024 post-bleaching % survival` * `# frags`),
propSurvival = replace_na(aliveNow / aliveBefore, 0),
propDeadAndMissing = 1 - propSurvival
) %>%
droplevels()
levels(bleachCombo$Deliverable)
bleachPlot <- bleachCombo %>%
pivot_longer(cols = c("propSurvival", "propDeadAndMissing"), names_to = "monitoringCategory", values_to = "proportion") %>%
mutate_at(c("monitoringCategory"), as.factor) %>%
mutate(`Site ID` = factor(`Site ID`, levels = mixedsort(levels(`Site ID`)))) %>%
select(Deliverable,
species,
Location,
`Site ID`,
monitoringCategory,
proportion)
str(bleachPlot)
bleachCombo <- bleachCombo1 %>%
filter(!`Site ID` %in% c("ES_AP_1")) %>%
mutate(
`12-month % Survival` = as.numeric(`12-month % Survival`),
aliveBefore = if_else(is.na(`12-month % Survival`) | is.na(`# frags`), 0, `12-month % Survival` * `# frags`),
aliveNow = if_else(is.na(`2024 post-bleaching % survival`) | aliveBefore == 0, 0, `2024 post-bleaching % survival` * `# frags`),
propSurvival = replace_na(aliveNow / aliveBefore, 0),
propDeadAndMissing = 1 - propSurvival
) %>%
mutate(species = as.factor(species)) %>%
droplevels()
msvsBleach <- msvsBleach1 %>%
select(Deliverable,
Location,
`Site ID`,
`# plugs`,
`1-month % Survival`,
`12-month % Survival`,
`Frags dead`,
`Frags missing`,
`2023 rapid post-bleaching monitoring % survival`) %>%
mutate(across(where(is.character), as.factor)) %>%
filter(str_detect(Deliverable, "State")) %>%
dplyr::rename(`# frags` = `# plugs`,
`2024 post-bleaching % survival` = `2023 rapid post-bleaching monitoring % survival`) %>%
mutate(species = "Massives")
acerBleach <- acerBleach1 %>%
select(Deliverable,
Location,
`Site ID`,
`# frags`,
`1-month % Survival`,
`12-month % Survival`,
`2024 post-bleaching # dead`,
`2024 post-bleaching # missing`,
`2024 post-bleaching % survival`) %>%
mutate(across(where(is.character), as.factor)) %>%
filter(str_detect(Deliverable, "State")) %>%
dplyr::rename(`Frags dead` = `2024 post-bleaching # dead`,
`Frags missing` = `2024 post-bleaching # missing`) %>%
mutate(species = "ACER")
apalBleach <- apalBleach1 %>%
select(Deliverable,
Location,
`Site ID`,
`# frags`,
`1-month % Survival`,
`12-month % Survival`,
`# missing...25`,
`# dead...24`,
`2024 post-bleaching % survival`) %>%
mutate(across(where(is.character), as.factor)) %>%
filter(str_detect(Deliverable, "State")) %>%
dplyr::rename(`Frags dead` = `# missing...25`,
`Frags missing` = `# dead...24`) %>%
mutate(species = 'APAL')
bleachCombo1 <- rbind(msvsBleach, acerBleach,apalBleach)
bleachCombo <- bleachCombo1 %>%
filter(!`Site ID` %in% c("ES_AP_1")) %>%
mutate(
`12-month % Survival` = as.numeric(`12-month % Survival`),
aliveBefore = if_else(is.na(`12-month % Survival`) | is.na(`# frags`), 0, `12-month % Survival` * `# frags`),
aliveNow = if_else(is.na(`2024 post-bleaching % survival`) | aliveBefore == 0, 0, `2024 post-bleaching % survival` * `# frags`),
propSurvival = replace_na(aliveNow / aliveBefore, 0),
propDeadAndMissing = 1 - propSurvival
) %>%
mutate(species = as.factor(species)) %>%
droplevels()
levels(bleachCombo$species)
bleachPlot <- bleachCombo %>%
pivot_longer(cols = c("propSurvival", "propDeadAndMissing"), names_to = "monitoringCategory", values_to = "proportion") %>%
mutate_at(c("monitoringCategory"), as.factor) %>%
mutate(`Site ID` = factor(`Site ID`, levels = mixedsort(levels(`Site ID`)))) %>%
select(Deliverable,
species,
Location,
`Site ID`,
monitoringCategory,
proportion)
str(bleachPlot)
myColors1 <- c("red3", "green3")
bleachSurvivalPlot2<- ggplot(bleachPlot, aes(x = `Site ID`, y = proportion, fill = monitoringCategory, color = I('black')))+
geom_bar(position = "stack", stat = 'identity', width = 1)+
ggtitle(expression("Post-Bleaching Event Proportional Survival"))+
xlab("Site")+
ylab("Proportional Survival")+
scale_fill_manual(values = myColors1, labels = c("Dead or Missing", "Alive")) +
facet_wrap(species ~ Deliverable, scales = "free_x")
bleachSurvivalPlot2
bleachSurvivalPlot3 <- bleachSurvivalPlot2 + theme(
# Title
plot.title = element_text(size = 40, face = "bold"),
# X Axis
axis.text.x = element_text(size = 20, angle = 45, hjust = 1),
axis.title.x = element_text(size = 40, face = "bold"),
# Y Axis
axis.title.y = element_text(size = 40, face = "bold"),
axis.text.y = element_text(colour = "black", size = 30, face = "bold"),
# Axis Lines and Ticks
axis.line = element_line(colour = "black"),
axis.ticks = element_line(color="black"),
# Legend
legend.title = element_blank(),
legend.text = element_text(size = 30, face = "bold", colour = "black"),
legend.position = "bottom",
# Grid and Background
panel.grid.major = element_line(size = 0.3, linetype = 'solid', colour = "black"),
panel.background = element_rect(fill = 'white'),
# Text
text = element_text(size=20, color="black"),
# Text above facets
strip.text = element_text(size = 20))
bleachSurvivalPlot3
bleachSurvivalPlot2<- ggplot(bleachPlot, aes(x = `Site ID`, y = proportion, fill = monitoringCategory, color = I('black')))+
geom_bar(position = "stack", stat = 'identity', width = 1)+
ggtitle(expression("Post-Bleaching Event Proportional Survival"))+
xlab("Site")+
ylab("Proportional Survival")+
scale_fill_manual(values = myColors1, labels = c("Dead or Missing", "Alive")) +
facet_wrap(species ~ Deliverable, scales = "free_x")
bleachSurvivalPlot2
levels(bleachPlot$Deliverable)
bleachSurvivalPlot2<- ggplot(bleachPlot, aes(x = `Site ID`, y = proportion, fill = monitoringCategory, color = I('black')))+
geom_bar(position = "stack", stat = 'identity', width = 1)+
ggtitle(expression("Post-Bleaching Event Proportional Survival"))+
xlab("Site")+
ylab("Proportional Survival")+
scale_fill_manual(values = myColors1, labels = c("Dead or Missing", "Alive")) +
facet_wrap(Deliverable ~ species, scales = "free_x")
bleachSurvivalPlot2
bleachSurvivalPlot3 <- bleachSurvivalPlot2 + theme(
# Title
plot.title = element_text(size = 40, face = "bold"),
# X Axis
axis.text.x = element_text(size = 20, angle = 45, hjust = 1),
axis.title.x = element_text(size = 40, face = "bold"),
# Y Axis
axis.title.y = element_text(size = 40, face = "bold"),
axis.text.y = element_text(colour = "black", size = 30, face = "bold"),
# Axis Lines and Ticks
axis.line = element_line(colour = "black"),
axis.ticks = element_line(color="black"),
# Legend
legend.title = element_blank(),
legend.text = element_text(size = 30, face = "bold", colour = "black"),
legend.position = "bottom",
# Grid and Background
panel.grid.major = element_line(size = 0.3, linetype = 'solid', colour = "black"),
panel.background = element_rect(fill = 'white'),
# Text
text = element_text(size=20, color="black"),
# Text above facets
strip.text = element_text(size = 20))
ggsave("../figures/postBleachingSurvivalNEW.png", plot =bleachSurvivalPlot3, width = 30, height = 30, units = 'in', dpi = 600)
view(bleachCombo)
bleachSurvivalTab <- bleachCombo %>%
select(Location, Site ID, species, propSurvival, propDeadAndMissing) %>%
bleachSurvivalTab <- bleachCombo %>%
select(Location,` Site ID`, species, propSurvival, propDeadAndMissing) %>%
group_by(species) %>%
dplyr::summarize(totalAliveBefore = sum(aliveBefore),
totalAliveNow = sum(aliveNow),
totalSurvival = totalAliveNow/totalAliveBefore)
bleachSurvivalTab <- bleachCombo %>%
select(Location,`Site ID`, species, propSurvival, propDeadAndMissing) %>%
group_by(species) %>%
dplyr::summarize(totalAliveBefore = sum(aliveBefore),
totalAliveNow = sum(aliveNow),
totalSurvival = totalAliveNow/totalAliveBefore)
bleachSurvivalTab <- bleachCombo %>%
select(Location,`Site ID`, species, propSurvival, propDeadAndMissing, aliveBefore, aliveNow) %>%
group_by(species) %>%
dplyr::summarize(totalAliveBefore = sum(aliveBefore),
totalAliveNow = sum(aliveNow),
totalSurvival = totalAliveNow/totalAliveBefore)
bleachSurvivalTab
view(bleachSurvivalTab)
bleachCombo <- bleachCombo1 %>%
mutate(
`12-month % Survival` = as.numeric(`12-month % Survival`),
aliveBefore = if_else(is.na(`12-month % Survival`) | is.na(`# frags`), 0, `12-month % Survival` * `# frags`),
aliveNow = if_else(is.na(`2024 post-bleaching % survival`) | aliveBefore == 0, 0, `2024 post-bleaching % survival` * `# frags`),
propSurvival = replace_na(aliveNow / aliveBefore, 0),
propDeadAndMissing = 1 - propSurvival
) %>%
mutate(species = as.factor(species)) %>%
droplevels()
bleachSurvivalTab <- bleachCombo %>%
select(Location,`Site ID`, species, propSurvival, propDeadAndMissing, aliveBefore, aliveNow) %>%
group_by(species) %>%
dplyr::summarize(totalAliveBefore = sum(aliveBefore),
totalAliveNow = sum(aliveNow),
totalSurvival = totalAliveNow/totalAliveBefore) %>%
flextable() %>%
set_header_labels(Data.set = "Data set") %>%
flextable::compose(part = "header", j = "Species", value = as_paragraph("State Year")) %>%
flextable::compose(part = "header", j = "totalAlive", value = as_paragraph("Fragments Alive")) %>%
flextable::compose(part = "header", j = "totalOutplanted", value = as_paragraph("Corals Outplanted")) %>%
flextable::compose(part = "header", j = "totalSurvival", value = as_paragraph("% Survival")) %>%
autofit() %>%
flextable::font(fontname = "Times New Roman", part = "all") %>%
fontsize(size = 12, part = "all") %>%
bold(part = "header") %>%
colformat_num(j = "totalAlive", digits = 0) %>%
colformat_num(j = "totalSurvival", digits = 2)
bleachSurvivalTab <- bleachCombo %>%
select(Location,`Site ID`, species, propSurvival, propDeadAndMissing, aliveBefore, aliveNow) %>%
group_by(species) %>%
dplyr::summarize(totalAliveBefore = sum(aliveBefore),
totalAliveNow = sum(aliveNow),
totalSurvival = totalAliveNow/totalAliveBefore)
view(bleachSurvivalTab)
bleachCombo <- bleachCombo1 %>%
mutate(
`12-month % Survival` = as.numeric(`12-month % Survival`),
aliveBefore = if_else(is.na(`12-month % Survival`) | is.na(`# frags`), 0, `12-month % Survival` * `# frags`),
aliveNow = if_else(is.na(`2024 post-bleaching % survival`) | aliveBefore == 0, 0, `2024 post-bleaching % survival` * `# frags`),
propSurvival = replace_na(aliveNow / aliveBefore, 0),
propDeadAndMissing = 1 - propSurvival
) %>%
mutate(species = as.factor(species)) %>%
droplevels()
bleachSurvivalTab <- bleachCombo %>%
select(Location,`Site ID`, species, propSurvival, propDeadAndMissing, aliveBefore, aliveNow) %>%
group_by(species) %>%
dplyr::summarize(totalAliveBefore = sum(aliveBefore),
totalAliveNow = sum(aliveNow),
totalSurvival = (totalAliveNow/totalAliveBefore)*100) %>%
flextable() %>%
set_header_labels(Data.set = "Data set") %>%
flextable::compose(part = "header", j = "Species", value = as_paragraph("Species")) %>%
flextable::compose(part = "header", j = "totalAlive", value = as_paragraph("Fragments Alive before the Bleaching Event")) %>%
flextable::compose(part = "header", j = "totalAliveNow", value = as_paragraph("Fragments Alive after the Bleaching Event")) %>%
flextable::compose(part = "header", j = "totalSurvival", value = as_paragraph("Percent Survived")) %>%
autofit() %>%
flextable::font(fontname = "Times New Roman", part = "all") %>%
fontsize(size = 12, part = "all") %>%
bold(part = "header") %>%
colformat_num(j = "totalAlive", digits = 0) %>%
colformat_num(j = "totalSurvival", digits = 2)
bleachSurvivalTab <- bleachCombo %>%
select(Location,`Site ID`, species, propSurvival, propDeadAndMissing, aliveBefore, aliveNow) %>%
group_by(species) %>%
dplyr::summarize(totalAliveBefore = sum(aliveBefore),
totalAliveNow = sum(aliveNow),
totalSurvival = (totalAliveNow/totalAliveBefore)*100)
view(bleachSurvivalTab)
bleachSurvivalTab <- bleachCombo %>%
select(Location,`Site ID`, species, propSurvival, propDeadAndMissing, aliveBefore, aliveNow) %>%
group_by(species) %>%
dplyr::summarize(totalAliveBefore = sum(aliveBefore),
totalAliveNow = sum(aliveNow),
totalSurvival = (totalAliveNow/totalAliveBefore)*100) %>%
flextable() %>%
set_header_labels(Data.set = "Data set") %>%
flextable::compose(part = "header", j = "species", value = as_paragraph("Species")) %>%
flextable::compose(part = "header", j = "totalAlive", value = as_paragraph("Fragments Alive before the Bleaching Event")) %>%
flextable::compose(part = "header", j = "totalAliveNow", value = as_paragraph("Fragments Alive after the Bleaching Event")) %>%
flextable::compose(part = "header", j = "totalSurvival", value = as_paragraph("Percent Survived")) %>%
autofit() %>%
flextable::font(fontname = "Times New Roman", part = "all") %>%
fontsize(size = 12, part = "all") %>%
bold(part = "header") %>%
colformat_num(j = "totalAlive", digits = 0) %>%
colformat_num(j = "totalSurvival", digits = 2)
bleachSurvivalTab <- bleachCombo %>%
select(Location,`Site ID`, species, propSurvival, propDeadAndMissing, aliveBefore, aliveNow) %>%
group_by(species) %>%
dplyr::summarize(totalAliveBefore = sum(aliveBefore),
totalAliveNow = sum(aliveNow),
totalSurvival = (totalAliveNow/totalAliveBefore)*100) %>%
flextable() %>%
set_header_labels(Data.set = "Data set") %>%
flextable::compose(part = "header", j = "species", value = as_paragraph("Species")) %>%
flextable::compose(part = "header", j = "totalAliveBefore", value = as_paragraph("Fragments Alive before the Bleaching Event")) %>%
flextable::compose(part = "header", j = "totalAliveNow", value = as_paragraph("Fragments Alive after the Bleaching Event")) %>%
flextable::compose(part = "header", j = "totalSurvival", value = as_paragraph("Percent Survived")) %>%
autofit() %>%
flextable::font(fontname = "Times New Roman", part = "all") %>%
fontsize(size = 12, part = "all") %>%
bold(part = "header") %>%
colformat_num(j = "totalAlive", digits = 0) %>%
colformat_num(j = "totalSurvival", digits = 2)
bleachSurvivalTab <- bleachCombo %>%
select(Location,`Site ID`, species, propSurvival, propDeadAndMissing, aliveBefore, aliveNow) %>%
group_by(species) %>%
dplyr::summarize(totalAliveBefore = sum(aliveBefore),
totalAliveNow = sum(aliveNow),
totalSurvival = (totalAliveNow/totalAliveBefore)*100) %>%
flextable() %>%
set_header_labels(Data.set = "Data set") %>%
flextable::compose(part = "header", j = "species", value = as_paragraph("Species")) %>%
flextable::compose(part = "header", j = "totalAliveBefore", value = as_paragraph("Fragments Alive before the Bleaching Event")) %>%
flextable::compose(part = "header", j = "totalAliveNow", value = as_paragraph("Fragments Alive after the Bleaching Event")) %>%
flextable::compose(part = "header", j = "totalSurvival", value = as_paragraph("Percent Survived")) %>%
autofit() %>%
flextable::font(fontname = "Times New Roman", part = "all") %>%
fontsize(size = 12, part = "all") %>%
bold(part = "header")
bleachSurvivalDoc = read_docx()
bleachSurvivalDoc = body_add_flextable(bleachSurvivalDoc, value = bleachSurvivalTab)
print(bleachSurvivalDoc, target = "../tables/bleachSurvivalTableNEW.docx")
bleachSurvivalTab
